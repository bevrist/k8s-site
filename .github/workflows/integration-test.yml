name: integration-tests

on:
  push:
    branches:
      - '*'
      - '*/*'
      - '**'

jobs:
  ### build service images
  build-auth:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t auth:$(git describe --always) -f ./auth/Dockerfile .
  build-database:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t database:$(git describe --always) -f ./database/Dockerfile .
  build-backend:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t backend:$(git describe --always) -f ./backend/Dockerfile .
  build-frontend-api:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t frontend-api:$(git describe --always) -f ./frontend-api/Dockerfile .
  build-frontend-web:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t frontend-web:$(git describe --always) ./frontend-web

  ### build test images
  build-auth-test:
    needs: build-auth
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t auth-test:$(git describe --always) -f ./auth/tests.Dockerfile .
  build-database-test:
    needs: build-database
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t database-test:$(git describe --always) -f ./database/tests.Dockerfile .
  build-mongodb-mock:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t mongodb-mock-database:$(git describe --always) -f ./database/mongoDB/Dockerfile .
  build-backend-test:
    needs: build-backend
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t backend-test:$(git describe --always) -f ./backend/tests.Dockerfile .
  build-frontend-api-test:
    needs: build-frontend-api
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t frontend-api-test:$(git describe --always) -f ./frontend-api/tests.Dockerfile .
  build-frontend-web-test:
    needs: build-frontend-web
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t frontend-web-test:$(git describe --always) -f ./frontend-web/tests.Dockerfile .

  ### run tests against service images
  test-database:
    needs: [build-mongodb-mock, build-database-test]
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    # cleaning up hanging containers
    - run: docker stop test-database_mongodb-mock-database || :;
    - run: docker stop test-database_database-service || :;
    - run: docker network rm database_net || :;
    - run: sleep 10
    # preparing database integration test
    - run: docker network create --driver bridge database_net
    - run: docker run --rm -d --name=test-database_mongodb-mock-database --net=database_net -e MONGO_INITDB_ROOT_USERNAME=adminz -e MONGO_INITDB_ROOT_PASSWORD=cheeksbutt mongodb-mock-database:$(git describe --always)
    - run: sleep 10 && docker run -d --rm --name=test-database_database-service --net=database_net -e DATABASE_ADDRESS=test-database_mongodb-mock-database:27017 -e DATABASE_LISTEN_ADDRESS=0.0.0.0:80 database:$(git describe --always)
    # testing database
    - run: sleep 10 && docker run --rm -i --name=database-test --net=database_net -e DATABASE_SERVICE_ADDRESS=test-database_database-service database-test:$(git describe --always)
    # cleaning up
    - run: docker stop test-database_mongodb-mock-database
    - run: docker stop test-database_database-service
    - run: docker network rm database_net

  test-auth:
    needs: [build-auth-test]
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    # cleaning up hanging containers
    - run: docker stop test-auth_auth-service || :;
    - run: docker network rm auth_net || :;
    - run: sleep 10
    # preparing auth integration test
    - run: docker network create --driver bridge auth_net
    - run: docker run --rm -d --name=test-auth_auth-service --net=auth_net -e TEST=1 -e AUTH_LISTEN_ADDRESS="0.0.0.0:80" auth:$(git describe --always)
    # testing auth
    - run: sleep 10 && docker run --rm -i --name=auth-test --net=auth_net -e AUTH_SERVICE_ADDRESS=test-auth_auth-service auth-test:$(git describe --always)
    # cleaning up
    - run: docker stop test-auth_auth-service
    - run: docker network rm auth_net

  test-backend:
    needs: [build-backend-test, build-mongodb-mock, build-database]
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    # cleaning up hanging containers
    - run: docker stop test-backend_mongodb-mock-database || :;
    - run: docker stop test-backend_database-service || :;
    - run: docker stop test-backend_backend-service || :;
    - run: docker network rm backend_net ||:;
    - run: sleep 10
    # preparing backend integration test
    - run: docker network create --driver bridge backend_net
    - run: docker run --rm -d --name=test-backend_mongodb-mock-database --net=backend_net -e MONGO_INITDB_ROOT_USERNAME=adminz -e MONGO_INITDB_ROOT_PASSWORD=cheeksbutt mongodb-mock-database:$(git describe --always)
    - run: sleep 10 && docker run -d --rm --name=test-backend_database-service --net=backend_net -e DATABASE_ADDRESS=test-backend_mongodb-mock-database:27017 -e DATABASE_LISTEN_ADDRESS=0.0.0.0:80 database:$(git describe --always)
    - run: sleep 10 && docker run -d --rm --name=test-backend_backend-service --net=backend_net -e DATABASE_ADDRESS=test-backend_database-service -e BACKEND_LISTEN_ADDRESS=0.0.0.0:80 backend:$(git describe --always)
    # testing backend
    - run: sleep 10 && docker run --rm -i --name=backend-test --net=backend_net -e BACKEND_API_SERVICE_ADDRESS=test-backend_backend-service backend-test:$(git describe --always)
    # cleaning up
    - run: docker stop test-backend_backend-service
    - run: docker stop test-backend_database-service
    - run: docker stop test-backend_mongodb-mock-database
    - run: docker network rm backend_net

  test-frontend-api:
    needs: [build-frontend-api-test, build-mongodb-mock, build-database, build-auth, build-backend]
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    # cleaning up hanging containers
    - run: docker stop test-frontend-api_auth-service || :;
    - run: docker stop test-frontend-api_mongodb-mock-database || :;
    - run: docker stop test-frontend-api_database-service || :;
    - run: docker stop test-frontend-api_backend-service || :;
    - run: docker stop test-frontend-api_frontend-api-service || :;
    - run: docker network rm frontend-api_net ||:;
    - run: sleep 10
    # preparing frontend-api integration test
    - run: docker network create --driver bridge frontend-api_net
    - run: docker run --rm -d --name=test-frontend-api_mongodb-mock-database --net=frontend-api_net -e MONGO_INITDB_ROOT_USERNAME=adminz -e MONGO_INITDB_ROOT_PASSWORD=cheeksbutt mongodb-mock-database:$(git describe --always)
    - run: docker run --rm -d --name=test-frontend-api_auth-service --net=frontend-api_net -e TEST=1 -e AUTH_LISTEN_ADDRESS="0.0.0.0:80" -e ADMINS='testUID,test3' auth:$(git describe --always)
    - run: sleep 10 && docker run -d --rm --name=test-frontend-api_database-service --net=frontend-api_net -e DATABASE_ADDRESS=test-frontend-api_mongodb-mock-database:27017 -e DATABASE_LISTEN_ADDRESS=0.0.0.0:80 database:$(git describe --always)
    - run: sleep 10 && docker run -d --rm --name=test-frontend-api_backend-service --net=frontend-api_net -e DATABASE_ADDRESS=test-frontend-api_database-service -e BACKEND_LISTEN_ADDRESS=0.0.0.0:80 backend:$(git describe --always)
    - run: sleep 10 && docker run -d --rm --name=test-frontend-api_frontend-api-service --net=frontend-api_net -e BACKEND_ADDRESS=test-frontend-api_backend-service -e AUTH_ADDRESS=test-frontend-api_auth-service -e FRONTEND_API_LISTEN_ADDRESS=0.0.0.0:80 frontend-api:$(git describe --always)
    # testing frontend-api
    - run: sleep 10 && docker run --rm -i --name=frontend-api-test --net=frontend-api_net -e FRONTEND_API_SERVICE_ADDRESS=test-frontend-api_frontend-api-service frontend-api-test:$(git describe --always)
    # cleaning up
    - run: docker stop test-frontend-api_frontend-api-service
    - run: docker stop test-frontend-api_auth-service
    - run: docker stop test-frontend-api_backend-service
    - run: docker stop test-frontend-api_database-service
    - run: docker stop test-frontend-api_mongodb-mock-database
    - run: docker network rm frontend-api_net

  test-frontend-web:
    needs: [build-frontend-web-test, build-frontend-api]
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    # cleaning up hanging containers
    - run: docker stop test-frontend-web_frontend-api-service || :;
    - run: docker stop test-frontend-web_frontend-web-service || :;
    - run: docker network rm frontend-web_net ||:;
    - run: sleep 10
    # preparing frontend-web integration test
    - run: docker network create --driver bridge frontend-web_net
    - run: sleep 10 && docker run -d --rm --name=test-frontend-web_frontend-api-service --net=frontend-web_net -e BACKEND_ADDRESS=test-frontend-web_backend-service -e AUTH_ADDRESS=test-frontend-web_auth-service -e FRONTEND_API_LISTEN_ADDRESS=0.0.0.0:80 frontend-api:$(git describe --always)
    - run: sleep 10 && docker run -d --rm --name=test-frontend-web_frontend-web-service --net=frontend-web_net -e FRONTEND_API_URL=http://test-frontend-web_frontend-api-service:8888 frontend-web:$(git describe --always)
    # testing frontend-web
    - run: sleep 10 && docker run --rm -i --name=frontend-web-test --net=frontend-web_net -e FRONTEND_WEB_ADDRESS=http://test-frontend-web_frontend-web-service frontend-web-test:$(git describe --always)
    # cleaning up
    - run: docker stop test-frontend-web_frontend-web-service
    - run: docker stop test-frontend-web_frontend-api-service
    - run: docker network rm frontend-web_net

  docker-hub-push-images:
    needs: [test-database, test-auth, test-backend, test-frontend-api, test-frontend-web]
    runs-on: [self-hosted, docker]
    # master branch only
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    # login to docker after all tests pass
    - run: docker login --username "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
    # re-tag all built images
    - run: docker tag auth:$(git describe --always) "${{ secrets.DOCKER_USERNAME }}"/workout-app-auth
    - run: docker tag backend:$(git describe --always) "${{ secrets.DOCKER_USERNAME }}"/workout-app-backend
    - run: docker tag database:$(git describe --always) "${{ secrets.DOCKER_USERNAME }}"/workout-app-database
    - run: docker tag frontend-api:$(git describe --always) "${{ secrets.DOCKER_USERNAME }}"/workout-app-frontend-api
    - run: docker tag frontend-web:$(git describe --always) "${{ secrets.DOCKER_USERNAME }}"/workout-app-frontend-web
    # push all images
    - run: docker push "${{ secrets.DOCKER_USERNAME }}"/workout-app-auth
    - run: docker push "${{ secrets.DOCKER_USERNAME }}"/workout-app-backend
    - run: docker push "${{ secrets.DOCKER_USERNAME }}"/workout-app-database
    - run: docker push "${{ secrets.DOCKER_USERNAME }}"/workout-app-frontend-api
    - run: docker push "${{ secrets.DOCKER_USERNAME }}"/workout-app-frontend-web
