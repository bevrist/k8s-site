name: integration-tests

on:
  push:
    branches:
      - '*'
      - '*/*'
      - '**'
  pull_request:
    branches: [ master ]

jobs:
  ### build service images
  build-auth:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t auth:$(git rev-parse --short HEAD) -f ./auth/Dockerfile .
  build-database:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t database:$(git rev-parse --short HEAD) -f ./database/Dockerfile .
  build-backend:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t backend:$(git rev-parse --short HEAD) -f ./backend/Dockerfile .
  build-frontend-api:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t frontend-api:$(git rev-parse --short HEAD) -f ./frontend-api/Dockerfile .

  ### build test images
  build-auth-test:
    needs: build-auth
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t auth-test:$(git rev-parse --short HEAD) -f ./auth/tests.Dockerfile .
  build-database-test:
    needs: build-database
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t database-test:$(git rev-parse --short HEAD) -f ./database/tests.Dockerfile .
  build-mongodb-mock:
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t mongodb-mock-database:$(git rev-parse --short HEAD) -f ./database/mongoDB/Dockerfile .
  # build-backend-test:
  #   needs: build-backend
  #   runs-on: [self-hosted, docker]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - run: docker build -t backend-test:$(git rev-parse --short HEAD) -f ./backend/tests.Dockerfile .
  build-frontend-api-test:
    needs: build-frontend-api
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t frontend-api-test:$(git rev-parse --short HEAD) -f ./frontend-api/tests.Dockerfile .


  ### run tests against service images
  test-database:
    needs: [build-mongodb-mock, build-database-test]
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    # cleaning up hanging containers
    - run: docker stop mongodb-mock-database || :;
    - run: docker stop database-service || :;
    - run: sleep 5
    # preparing database integration test
    - run: docker run --rm -d --name=mongodb-mock-database -p 27017:27017 --net=host -e MONGO_INITDB_ROOT_USERNAME=adminz -e MONGO_INITDB_ROOT_PASSWORD=cheeksbutt mongodb-mock-database:$(git rev-parse --short HEAD)
    - run: sleep 5 && docker run -d --rm --name=database-service -p 8050:8050 --net=host database:$(git rev-parse --short HEAD)
    # testing database
    - run: sleep 5 && docker run --rm -i --name=database-test --net=host database-test:$(git rev-parse --short HEAD)
    # cleaning up
    - run: docker stop mongodb-mock-database
    - run: docker stop database-service

  test-auth:
    needs: build-auth-test
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    # cleaning up hanging containers
    - run: docker stop auth-service || :;
    - run: sleep 5
    # preparing auth integration test
    - run: docker run --rm -d --name=auth-service -p 8070:8070 --net=host --rm -e AUTH_FIREBASE_CREDENTIALS='{test}' auth:$(git rev-parse --short HEAD)
    # testing auth
    - run: sleep 5 && docker run --rm -i --name=auth-test --net=host auth-test:$(git rev-parse --short HEAD)
    # cleaning up
    - run: docker stop auth-service

  test-frontend-api:
    needs: [build-frontend-api-test, test-auth, test-database]
    runs-on: [self-hosted, docker]
    steps:
    - uses: actions/checkout@v2
    # cleaning up hanging containers
    - run: docker stop auth-service || :;
    - run: docker stop mongodb-mock-database || :;
    - run: docker stop database-service || :;
    - run: docker stop backend-service || :;
    - run: docker stop frontend-api-service || :;
    - run: sleep 5
    # preparing frontend-api integration test
    - run: docker run --rm -d --name=auth-service -p 8070:8070 --net=host --rm -e AUTH_FIREBASE_CREDENTIALS='{test}' auth:$(git rev-parse --short HEAD)
    - run: docker run --rm -d --name=mongodb-mock-database -p 27017:27017 --net=host -e MONGO_INITDB_ROOT_USERNAME=adminz -e MONGO_INITDB_ROOT_PASSWORD=cheeksbutt mongodb-mock-database:$(git rev-parse --short HEAD)
    - run: sleep 5 && docker run -d --rm --name=database-service -p 8050:8050 --net=host database:$(git rev-parse --short HEAD)
    - run: sleep 5 && docker run -d --rm --name=backend-service -p 8050:8050 --net=host backend:$(git rev-parse --short HEAD)
    - run: sleep 5 && docker run -d --rm --name=frontend-api-service -p 8888:8888 --net=host frontend-api:$(git rev-parse --short HEAD)
    # testing frontend-api
    - run: sleep 5 && docker run --rm -i --name=frontend-api-test --net=host frontend-api-test:$(git rev-parse --short HEAD)
    # cleaning up
    - run: docker stop frontend-api-service
    - run: docker stop auth-service
    - run: docker stop backend-service
    - run: docker stop database-service
    - run: docker stop mongodb-mock-database
