# Docker compose for quick local instance of workout app
# run with `docker buildx bake && docker-compose down && PROVIDER_SECRET="<SECRET>" PROVIDER_KEY="<KEY>" docker-compose up`

version: "3"

services:
  mock-database:
    build:
      context: .
      dockerfile: ./database/mongoDB/Dockerfile
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: adminz
      MONGO_INITDB_ROOT_PASSWORD: cheeksbutt
    logging:
      driver: none
    restart: on-failure

  mock-database-debug:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: adminz
      ME_CONFIG_MONGODB_ADMINPASSWORD: cheeksbutt
      ME_CONFIG_MONGODB_SERVER: mock-database
      VCAP_APP_HOST: "0.0.0.0"
    logging:
      driver: none
    restart: on-failure

  database_service:
    build:
      context: .
      dockerfile: ./database/Dockerfile
    ports:
      - 8050:8050
    environment:
      DATABASE_LISTEN_ADDRESS: 0.0.0.0:8050
      DATABASE_ADDRESS: mock-database:27017
      DATABASE_USERNAME: adminz
      DATABASE_PASSWORD: cheeksbutt
    restart: on-failure

  backend_service:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    ports:
      - 8090:8090
    environment:
      BACKEND_LISTEN_ADDRESS: 0.0.0.0:8090
      DATABASE_ADDRESS: database_service:8050
    restart: on-failure

  mock-redis-database:
    build:
      context: auth/redis
    ports:
      - 6379:6379
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: adminz
    #   MONGO_INITDB_ROOT_PASSWORD: cheeksbutt
    logging:
      driver: none
    restart: on-failure

  auth_service:
    build:
      context: .
      dockerfile: ./auth/Dockerfile
    ports:
      - 8070:8070
    environment:
      AUTH_LISTEN_ADDRESS: "0.0.0.0:8070"
      REDIS_CONNECTION_STRING: "redis://mock-redis-database:6379/0"
      PROVIDER_SECRET: $PROVIDER_SECRET
      PROVIDER_KEY: $PROVIDER_KEY
      ADMINS: 'a@example.c0m'
      WEBSITE_BASE_URL: "http://dreamandachieve.net"
    restart: on-failure

  frontend-api_service:
    build:
      context: .
      dockerfile: ./frontend-api/Dockerfile
    ports:
      - 8888:8888
    environment:
      FRONTEND_API_LISTEN_ADDRESS: 0.0.0.0:8888
      BACKEND_ADDRESS: backend_service:8090
      AUTH_ADDRESS: auth_service:8070
    restart: on-failure

  frontend-web_service:
    build:
      context: ./frontend-web
    ports:
      - 80:80
    environment:
      FRONTEND_API_URL: "http://frontend-api_service:8888"
      AUTH_URL: http://auth_service:8070
    logging:
      driver: none
    restart: on-failure
